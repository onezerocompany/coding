name: Publish Package

on:
  release:
    types: [released]

jobs:
  publish_extensions:
    name: Publish ${{ matrix.extension.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        extension:
          - path: packages/onezero-themes
            name: OneZero Themes
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          path: .

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Publish to Marketplace
        run: npx vsce publish --no-git-tag-version --no-dependencies -p ${{ secrets.VSCODE_MARKETPLACE_TOKEN }} ${{ github.ref_name }}
        working-directory: ${{ matrix.extension.path }}

  publish_devcontainers:
    name: Publish ${{ matrix.image.name }} Devcontainer
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - directory: images/devcontainer
            name: Universal
            tags: |
              ghcr.io/onezerocompany/devcontainer:latest
              ghcr.io/onezerocompany/devcontainer:${{ github.ref_name }}
              ghcr.io/onezerocompany/devcontainer:universal
              ghcr.io/onezerocompany/devcontainer:universal-${{ github.ref_name }}
              ghcr.io/onezerocompany/devcontainer:universal-latest
            features:
              node: true
              docker: true
              flutter: true

          - directory: images/devcontainer
            name: Node
            tags: |
              ghcr.io/onezerocompany/devcontainer:node
              ghcr.io/onezerocompany/devcontainer:node-${{ github.ref_name }}
              ghcr.io/onezerocompany/devcontainer:node-latest
            features:
              node: true
              docker: false
              flutter: false

          - directory: images/devcontainer
            name: Docker
            tags: |
              ghcr.io/onezerocompany/devcontainer:docker
              ghcr.io/onezerocompany/devcontainer:docker-${{ github.ref_name }}
              ghcr.io/onezerocompany/devcontainer:docker-latest
            features:
              node: false
              docker: true
              flutter: false

          - directory: images/devcontainer
            name: Flutter
            tags: |
              ghcr.io/onezerocompany/devcontainer:flutter
              ghcr.io/onezerocompany/devcontainer:flutter-${{ github.ref_name }}
              ghcr.io/onezerocompany/devcontainer:flutter-latest
            features:
              node: false
              docker: false
              flutter: true
    defaults:
      run:
        working-directory: ${{ matrix.image.directory }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          path: .

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.image.directory }}
          platforms: linux/amd64,linux/arm64,linux/386
          push: true
          build-args: |
            INSTALL_NODE="${{ matrix.image.features.node }}"
            INSTALL_DOCKER="${{ matrix.image.features.docker }}"
            INSTALL_FLUTTER="${{ matrix.image.features.flutter }}"
          tags: ${{ matrix.image.tags }}

  # publish_dart:
  #   name: Publish ${{ matrix.extension.name }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       package:
  #         - directory: packages/flutter_lints
  #           name: Flutter Lint Rules
  #           build: false
  #   defaults:
  #     run:
  #       working-directory: ${{ matrix.package.directory }}
  #   steps:
  #     - name: Checkout project
  #       uses: actions/checkout@v3
  #       with:
  #         path: .

  #     - name: Setup Flutter
  #       uses: ./actions/setup-flutter
  #       with:
  #         working_directory: ${{ matrix.package.directory }}
  #         pub_credentials: ${{ secrets.PUB_CREDENTIALS }}
  #         version: 2.10.5
  #         channel: stable

  #     - name: Publish Dart Package
  #       run: flutter pub publish

  publish_node:
    name: Publish ${{ matrix.package.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - directory: packages/prettier-config
            name: Prettier Config
            build: false
          - directory: packages/eslint-config
            name: ESLint Configs
            build: false
          - directory: packages/tsconfig
            name: TypeScript Configs
            build: false
          - directory: packages/commit
            name: Commit Tool
            build: true
    defaults:
      run:
        working-directory: ${{ matrix.package.directory }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          path: .

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          registry-url: 'https://npm.pkg.github.com'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        working-directory: .
        run: npm install

      - name: Build
        if: ${{ matrix.package.build }}
        run: npm run build

      - name: Package Version
        run: npm version ${{ github.ref_name }} --no-git-tag-version

      - name: Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
